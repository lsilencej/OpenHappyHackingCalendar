[
    {
        "lang": "C",
        "class": "c",
        "desc": "C语言",
        "code": "c",
        "descWiki": "C是一种通用的、过程式编程编程语言，支持结构化编程、词法作用域和递归，使用静态类型系统，并且广泛用于系统软件与应用软件的开发。"
    },
    {
        "lang": "C++",
        "class": "cpp",
        "desc": "C++",
        "code": "cpp",
        "descWiki": "C++是一种被广泛使用的计算机程序设计语言。它是一种通用程序设计语言，支持多重编程范式，例如过程化程序设计、数据抽象、面向对象程序设计、泛型程序设计和设计模式等。"
    },
    {
        "lang": "Java",
        "class": "java",
        "desc": "Java",
        "code": "java",
        "descWiki": "Java是一种广泛使用的计算机编程语言，拥有跨平台、面向对象、泛型编程的特性，广泛应用于企业级Web应用开发和移动应用开发。"
    },
    {
        "lang": "C#",
        "class": "csharp",
        "desc": "C♯",
        "code": "cs",
        "descWiki": "C#是微软推出的一种基于.NET框架的、面向对象的高级编程语言。C#是一种由C和C++派生出来的面向对象的编程语言。它在继承C和C++强大功能的同时去掉了一些它们的复杂特性，使其成为C语言家族中的一种高效强大的编程语言。C#以.NET框架类库作为基础，拥有类似Visual Basic的快速开发能力。C#由安德斯·海尔斯伯格主持开发，微软在2000年发布了这种语言，希望借助这种语言来取代Java。C#已经成为Ecma国际和国际标准组织的标准规范。"
    },
    {
        "lang": "Python",
        "class": "python",
        "desc": "Python",
        "code": "py",
        "descWiki": "Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/），是一种广泛使用的解释型、高级和通用的编程语言。Python支持多种编程范型，包括函数式、指令式、反射式、结构化和面向对象编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且其本身拥有一个巨大而广泛的标准库。它的语言结构以及面向对象的方法旨在帮助程序员为小型的和大型的项目编写清晰的、合乎逻辑的代码。"
    },
    {
        "lang": "TypeScript",
        "class": "typescript",
        "desc": "TypeScript",
        "code": "ts",
        "descWiki": "TypeScript是一种开源的编程语言，该语言项目由微软进行维护和管理。TypeScript不仅包含JavaScript的语法，而且还提供了静态类型检查以及使用看起来像基于类的面向对象编程语法操作Prototype。C#的首席架构师以及Delphi和Turbo Pascal的创始人安德斯·海尔斯伯格参与了TypeScript的开发。TypeScript是为开发大型应用而设计的，并且TypeScript可转译成JavaScript。由于TypeScript是JavaScript的严格超集，任何现有的JavaScript程序都是合法的TypeScript程序。"
    },
    {
        "lang": "PHP",
        "class": "php",
        "desc": "PHP",
        "code": "php",
        "descWiki": "PHP（全称：PHP：Hypertext Preprocessor，即“PHP：超文本预处理器”）是一种开源的通用计算机脚本语言，尤其适用于网络开发并可嵌入HTML中使用。PHP的语法借鉴吸收C语言、Java和Perl等流行计算机语言的特点，易于一般程序员学习。PHP的主要目标是允许网络开发人员快速编写动态页面，但PHP也被用于其他很多领域。"
    },
    {
        "lang": "JavaScript",
        "class": "javascript",
        "desc": "JavaScript",
        "code": "js",
        "descWiki": "JavaScript（通常缩写为JS）是一种高级的、解释型的编程语言。JavaScript是一门基于原型、头等函数的语言，是一门多范式的语言，它支持面向对象程序设计，指令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。它已经由ECMA（欧洲电脑制造商协会）通过ECMAScript实现语言的标准化。它被世界上的绝大多数网站所使用，也被世界主流浏览器（Chrome、IE、Firefox、Safari、Opera）支持。"
    },
    {
        "lang": "Visual Basic",
        "class": "vbnet",
        "desc": "Visual_Basic",
        "code": "vb",
        "descWiki": "Visual Basic（VB）是由微软公司开发的包含环境的事件驱动编程语言。它源自于BASIC编程语言。VB拥有图形用户界面（GUI）和快速应用程序开发（RAD）系统，可以轻易的使用DAO、RDO、ADO连接数据库，或者轻松的创建ActiveX控件。程序员可以轻松地使用VB提供的组件快速创建一个应用程序。"
    },
    {
        "lang": "Perl",
        "class": "perl",
        "desc": "Perl",
        "code": "pl",
        "descWiki": "Perl是高端、通用、解释型、动态的编程语言家族。最初设计者拉里·沃尔为了让在UNIX上进行报表处理的工作变得更方便，决定开发一个通用的脚本语言，而在1987年12月18日发表。目前，Perl语言家族包含两个分支Perl 5以及Perl 6。虽然Perl不是正式的首字母缩略词，但仍有各种各样的逆向首字母缩略词，包括“实用的提取和报告语言”。Perl借用了C、sed、awk、shell脚本、Lisp以及很多其他编程语言的特性。其中最重要的特性是Perl内部集成了正则表达式的功能，以及巨大的第三方代码库CPAN。"
    },
    {
        "lang": "Ruby",
        "class": "ruby",
        "desc": "Ruby",
        "code": "rb",
        "descWiki": "Ruby 是一种面向对象、指令式、函数式、动态的通用编程语言。在20世纪90年代中期由日本计算机科学家松本行弘（Matz）设计并开发。"
    },
    {
        "lang": "CoffeeScript",
        "class": "coffeescript",
        "desc": "CoffeeScript",
        "code": "coffee",
        "descWiki": "CoffeeScript是一套JavaScript的转译语言。受到Ruby、Python与Haskell等语言的启发，CoffeeScript增强了JavaScript的简洁性与可读性。此外，CoffeeScript也新增了更复杂的功能，例如列表推导式、并行赋值等。一般来说，CoffeeScript可以在不影响执行性能的情况下，缩短约三分之一的代码长度。"
    },
    {
        "lang": "CSS",
        "class": "css",
        "desc": "层叠样式表",
        "code": "css",
        "descWiki": "层叠样式表（英语：Cascading Style Sheets，缩写：CSS；又称串样式列表、级联样式表、串接样式表、阶层式样式表）是一种用来为结构化文档（如HTML文档或XML应用）添加样式（字体、间距和颜色等）的计算机语言，由W3C定义和维护。CSS3现在已被大部分现代浏览器支持，而下一版的CSS4仍在开发中。"
    },
    {
        "lang": "R",
        "class": "r",
        "desc": "R语言",
        "code": "r",
        "descWiki": "R语言是一种自由软件编程语言与操作环境，主要用于统计分析、绘图以及数据挖掘。R本来由来自新西兰奥克兰大学的统计学家罗斯·伊哈卡和罗伯特·杰特曼开发，现在由R核心小组负责开发，同时也有其他用户编写了诸多外挂的软件包。R以S语言为基础，其语法来自Scheme。R的后台程序大多由C语言、FORTRAN语言和R自己写成。R语言是GNU计划的一个项目，所以其源代码可自由下载使用。R也有已编译的可执行文件版本可以下载，可在多种平台下运行，包括UNIX（也包括FreeBSD和Linux）、Windows和MacOS。R可以以命令行操作，同时有人开发了几种图形用户界面，其中包括RStudio与Jupyter。在TIOBE2022年1月对编程语言人气的排名中，R排名第12。"
    },
    {
        "lang": "Delphi",
        "class": "pascal",
        "desc": "Delphi",
        "code": "pas",
        "descWiki": "Delphi，是Windows平台下Object Pascal语言集成开发环境，支持应用程序快速开发（Rapid Application Development，简称RAD）。最初版本由美国Borland公司于1995年开发，用于接替DOS时代盛行一时的“Turbo Pascal”。主创者为安德斯·海尔斯伯格。经过数年发展，此产品已转移至Embarcadero公司旗下。"
    },
    {
        "lang": "Swift",
        "class": "swift",
        "desc": "Swift_(程式語言)",
        "code": "swift",
        "descWiki": "Swift编程语言，支持多编程范式和编译式，用来撰写基于macOS/OS X、iOS、iPadOS、watchOS和tvOS的软件。"
    },
    {
        "lang": "MATLAB",
        "class": "matlab",
        "desc": "MATLAB",
        "code": "m",
        "descWiki": "MATLAB（Matrix Laboratory，矩阵实验室）是由美国The MathWorks公司出品的商业数学软件。MATLAB是一种用于算法开发、数据可视化、数据分析以及数值计算的高级技术计算语言和交互式环境。除矩阵运算、绘制函数/数据图像等常用功能外，MATLAB还可用来创建用户界面，以及调用其它语言（包括C、C++、Java、Python、FORTRAN）编写的程序。"
    },
    {
        "lang": "Go",
        "class": "go",
        "desc": "Go",
        "code": "go",
        "descWiki": "Go（又称Golang）是Google开发的一种静态强类型、编译型、并发型，并具有垃圾回收功能的编程语言。"
    },
    {
        "lang": "Objective-C",
        "class": "objectivec",
        "desc": "Objective-C",
        "code": "oc.m",
        "descWiki": "Objective-C是一种通用、高级、面向对象的编程语言。它扩展了标准的ANSI C编程语言，将Smalltalk式的消息传递机制加入到ANSI C中。目前主要支持的编译器有GCC和Clang（采用LLVM作为后端）。"
    },
    {
        "lang": "SQL",
        "class": "sql",
        "desc": "SQL",
        "code": "sql",
        "descWiki": "SQL（/ˈɛs kjuː ˈɛl/或/ˈsiːkwəl/，Structured Query Language，结构化查询语言）是一种特定目的编程语言，用于管理关系数据库管理系统（RDBMS），或在关系流数据管理系统（RDSMS）中进行流处理。"
    },
    {
        "lang": "HTML",
        "class": "html",
        "desc": "HTML",
        "code": "html",
        "descWiki": "超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。HTML是一种基础技术，常与CSS、JavaScript一起被众多网站用于设计网页、网页应用程序以及移动应用程序的用户界面。网页浏览器可以读取HTML文件，并将其渲染成可视化网页。HTML描述了一个网站的结构语义随着线索的呈现，使之成为一种标记语言而非编程语言。"
    },
    {
        "lang": "Dart",
        "class": "dart",
        "desc": "Dart",
        "code": "dart",
        "descWiki": "Dart（[KK] 英语发音：/dɑrt/, [DJ] 英语发音：/dɑ:t/）是一种适用于万维网的开放源代码编程语言，由Google主导开发，于2011年10月公开。它的开发团队由Google Chrome浏览器V8引擎团队的领导者拉尔斯·巴克主持，目标在于成为下一代结构化Web开发语言。"
    },
    {
        "lang": "D",
        "class": "d",
        "desc": "D語言",
        "code": "d",
        "descWiki": "D语言是一种编程语言，具备多范型，例如面向对象、指令式。由沃尔特·布莱特和安德烈·亚历山德雷斯库所开发，起源自C++，深受C++的影响，然而其不是C++的变种，而是重新设计来自C++的部分特性，并受到其它编程语言观念的影响，如Java、C#以及Eiffel。2007年1月2日发布1.0稳定版本。2007年1月17日发布2.0版本。"
    },
    {
        "lang": "Ada",
        "class": "ada",
        "desc": "Ada",
        "code": "ada",
        "descWiki": "Ada，是一种程序设计语言。它源于美国国防部在二十世纪七十年代的计划，旨在集成美军系统程序设计语言，而当时美军系统运行着上百种不同的程序设计语言，并提高调试能力和效率，由Pascal及其他语言扩展而成，接近自然语言和数学表达式，用“Ada”命名以纪念埃达·洛夫莱斯（Ada Lovelace）。"
    },
    {
        "lang": "Erlang",
        "class": "erlang",
        "desc": "Erlang",
        "code": "erl",
        "descWiki": "Erlang（/ˈɜːrlæŋ/）是一种通用的并发函数式程序设计语言。Erlang也可以指Erlang/OTP的通称，开源电信平台（OTP）是Erlang的常用执行环境及一系列标准组件。"
    },
    {
        "lang": "Lisp",
        "class": "lisp",
        "desc": "LISP",
        "code": "lisp",
        "descWiki": "Lisp（历史上拼写为LISP），是具有悠久历史的计算机编程语言家族，有独特和完全用括号的前缀符号表示法。起源于1958年，是现今第二悠久而仍广泛使用的高端编程语言。只有FORTRAN编程语言比它更早一年。Lisp编程语族已经演变出许多种方言。现代最著名的通用编程语种是Scheme、Common Lisp、Racket和Clojure。"
    },
    {
        "lang": "Lua",
        "class": "lua",
        "desc": "Lua",
        "code": "lua",
        "descWiki": "Lua（发音： /ˈluːə/，葡萄牙语“月亮”）是一个简洁、轻量、可扩展的脚本语言。Lua有着相对简单的C API而很容易嵌入应用中。很多应用程序使用Lua作为自己的嵌入式脚本语言，以此来实现可配置性、可扩展性。"
    },
    {
        "lang": "F#",
        "class": "fsharp",
        "desc": "F♯",
        "code": "fs",
        "descWiki": "F#是由微软发展的为.NET语言提供运行环境的程序设计语言，是函数编程语言（FP，Functional Programming），函数编程语言最重要的基础是Lambda Calculus。它是基于OCaml的，而OCaml是基于ML函数编程语言。有时F#和OCaml的程序是可以交互编译的。"
    },
    {
        "lang": "Verilog",
        "class": "verilog",
        "desc": "Verilog",
        "code": "v",
        "descWiki": "Verilog是一种用于描述、设计电子系统（特别是数字电路）的硬件描述语言，主要用于在集成电路设计，特别是超大规模集成电路的计算机辅助设计。Verilog是电气电子工程师学会（IEEE）的1364号标准。"
    },
    {
        "lang": "PowerShell",
        "class": "powershell",
        "desc": "Windows_PowerShell",
        "code": "ps1",
        "descWiki": "PowerShell（包括Windows PowerShell和PowerShell Core）是微软公司开发的任务自动化和配置管理框架，由.NET Framework和.NET Core是构建的命令行界面壳层相关脚本语言组成，最初仅仅是Windows组件，后于2016年8月18日开源并跨平台支持。"
    },
    {
        "lang": "ActionScript",
        "class": "actionscript",
        "desc": "ActionScript",
        "code": "as",
        "descWiki": "ActionScript是原Macromedia公司（后并入Adobe）为其Flash产品开发的一种基于ECMAScript的面向对象编程语言。ActionScript可用于网页制作、Adobe Flash动画和RIA应用程序的开发。"
    },
    {
        "lang": "Groovy",
        "class": "groovy",
        "desc": "Groovy",
        "code": "groovy",
        "descWiki": "Apache的Groovy是Java平台上设计的面向对象编程语言。这门动态语言拥有类似Python、Ruby和Smalltalk中的一些特性，可以作为Java平台的脚本语言使用，Groovy代码动态地编译成运行于Java虚拟机（JVM）上的Java字节码，并与其他Java代码和库进行互操作。由于其运行在JVM上的特性，Groovy可以使用其他Java语言编写的库。Groovy的语法与Java非常相似，大多数Java代码也符合Groovy的语法规则，尽管可能语义不同。"
    },
    {
        "lang": "Julia",
        "class": "julia",
        "desc": "Julia_(编程语言)",
        "code": "jl",
        "descWiki": "Julia是一种高级通用动态编程语言，它最初是为了满足高性能数值分析和计算科学的需要而设计的，不需要解释器，速度快，也可用于客户端和服务器的Web用途、低级系统编程或用作规约语言。"
    },
    {
        "lang": "AppleScript",
        "class": "applescript",
        "desc": "AppleScript",
        "code": "scpt",
        "descWiki": "AppleScript是苹果公司开发的一种脚本语言，可以用来控制运行于Mac OS上的程序，也可以写成独立运行的Applet。最早版本在1993年十月推出，在System 7（System 7.1.1）运行。"
    },
    {
        "lang": "Bash",
        "class": "bash",
        "desc": "Bash",
        "code": "sh",
        "descWiki": "Bash，Unix shell的一种，在1987年由布莱恩·福克斯为了GNU计划而编写。1989年发布第一个正式版本，原先是计划用在GNU操作系统上，但能运行于大多数类Unix系统的操作系统之上，包括Linux与Mac OS X v10.4起至macOS Mojave都将它作为默认shell，而自macOS Catalina，默认Shell以zsh取代。"
    },
    {
        "lang": "Assembly Language",
        "class": "avrasm",
        "desc": "汇编语言",
        "code": "s",
        "descWiki": "汇编语言（英语：assembly language：汇编语言）是任何一种用于电子计算机、微处理器、微控制器，或其他可编程器件的低级语言。在不同的设备中，汇编语言对应着不同的机器语言指令集。一种汇编语言专用于某种计算机系统结构，而不像许多高级语言，可以在不同系统平台之间移植。"
    },
    {
        "lang": "Tcl",
        "class": "tcl",
        "desc": "Tcl",
        "code": "tcl",
        "descWiki": "Tcl（发音tickle）是一种脚本语言。由John Ousterhout创建。TCL经常被用于快速原型开发 RAD、脚本编程、GUI编程和测试等方面。"
    },
    {
        "lang": "TeX",
        "class": "latex",
        "desc": "TeX",
        "code": "tex",
        "descWiki": "TEX（/tɛx/，常被读作/tɛk/，音译“泰赫”，“泰克”，写作“TeX”），是一个由美国计算机教授高德纳（Donald Ervin Knuth）编写的排版软件。TeX的MIME类型为application/x-tex，是一款自由软件。它在学术界特别是数学、物理学和计算机科学界十分流行。TEX被普遍认为是一个优秀的排版工具，尤其是对于复杂数学公式的处理。利用LaTeX等终端软件，TeX就能够排版出精美的文本以帮助人们辨认和查找。"
    },
    {
        "lang": "Batch",
        "class": "cmd",
        "desc": "批次檔",
        "code": "cmd",
        "descWiki": "批处理文件（英语：Batch file），又称批次档，在DOS、OS/2、微软视窗系统中，是一种用来当成脚本语言运作程序的文件。它本身是文本文件，其中包含了一系列让具备命令行界面的解释器读取并执行的指令。它应用于DOS和Windows系统中，它是由DOS或者Windows系统内嵌的解释器（通常是COMMAND.COM或者CMD.EXE）解释运行。它相当于是类Unix系统下的Shell script。"
    },
    {
        "lang": "Makefile",
        "class": "makefile",
        "desc": "Make",
        "code": "mk",
        "descWiki": "make是一个在软件开发中所使用的工具程序（Utility software），经由读取“makefile”的文件以自动化建构软件。它是一种转化文件形式的工具，转换的目标称为“target”；与此同时，它也检查文件的依赖关系，如果需要的话，它会调用一些外部软件来完成任务。它的依赖关系检查系统非常简单，主要根据依赖文件的修改时间进行判断。大多数情况下，它被用来编译源代码，生成结果代码，然后把结果代码连接起来生成可执行文件或者库文件。它使用叫做“makefile”的文件来确定一个target文件的依赖关系，然后把生成这个target的相关命令传给shell去执行。"
    },
    {
        "lang": "SAS",
        "class": "sas",
        "desc": "SAS语言",
        "code": "sas",
        "descWiki": "SAS语言是一种用于统计分析的编程语言，源自于北卡罗来纳州立大学的一个计划。它可以读取普通的电子表格和数据库，然后以图形或表格的方式导出为RTF、HTML或是PDF文件。SAS语言可以在Windows、Linux、Unix与大型计算机下使用编译器运行。统计分析系统和世界编程系统（World Programming System）都是支援SAS语言的编译器。"
    },
    {
        "lang": "Scala",
        "class": "scala",
        "desc": "Scala",
        "code": "scala",
        "descWiki": "Scala（发音为/ˈskɑːlə, ˈskeɪlə/）是一门多范式的编程语言，设计初衷是要集成面向对象编程和函数式编程的各种特性。"
    },
    {
        "lang": "AWK",
        "class": "awk",
        "desc": "AWK",
        "code": "awk",
        "descWiki": "AWK是一种优良的文本处理工具，Linux及Unix环境中现有的功能最强大的数据处理引擎之一。这种编程及数据操作语言（其名称得自于它的创始人阿尔佛雷德·艾侯、彼得·温伯格和布莱恩·柯林汉姓氏的首个字母）的最大功能取决于一个人所拥有的知识。AWK提供了极其强大的功能：可以进行正则表达式的匹配，样式装入、流控制、数学运算符、进程控制语句甚至于内置的变量和函数。它具备了一个完整的语言所应具有的几乎所有精美特性。实际上AWK的确拥有自己的语言：AWK程序设计语言，三位创建者已将它正式定义为“样式扫描和处理语言”。它允许创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。gawk是AWK的GNU版本。"
    },
    {
        "lang": "Excel Macro",
        "class": "excel",
        "desc": "Microsoft_Excel",
        "code": "xls",
        "descWiki": "Microsoft Excel是Microsoft为使用Windows和Apple Macintosh操作系统的电脑编写的一款电子表格软件。直观的界面、出色的计算功能和图表工具，再加上成功的市场营销，使Excel成为最流行的个人计算机数据处理软件。在1993年，作为Microsoft Office的组件发布了5.0版之后，Excel就开始成为所适用操作平台上的电子制表软件的霸主。"
    },
    {
        "lang": "Clojure",
        "class": "clojure",
        "desc": "Clojure",
        "code": "clj",
        "descWiki": "Clojure（/ˈkloʊʒər/）是Lisp编程语言在Java平台上的现代、动态及函数式方言。"
    },
    {
        "lang": "Prolog",
        "class": "prolog",
        "desc": "Prolog",
        "code": "pro",
        "descWiki": "Prolog（Programming in Logic的缩写）是一种逻辑编程语言。它创建在逻辑学的理论基础之上， 最初被运用于自然语言等研究领域。现在它已广泛的应用在人工智能的研究中，它可以用来建造专家系统、自然语言理解、智能知识库等。"
    },
    {
        "lang": "Vala",
        "class": "vala",
        "desc": "Vala",
        "code": "vala",
        "descWiki": "Vala是一门面向对象的编程语言，由自举编译器产生C语言代码和使用GObject系统，允许在Gnome运行时库的基础上使用大量现代的编程技巧。通过使用GLib和GObject，Vala提供了动态类型系统和基于引用计数（reference counting）系统的内存管理的功能。"
    },
    {
        "lang": "Vim Script",
        "class": "vim",
        "desc": "Vim",
        "code": "vim",
        "descWiki": "Vim是从vi发展出来的一个文本编辑器。其代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和Emacs并列成为类Unix系统用户最喜欢的编辑器。"
    },
    {
        "lang": "AutoIt",
        "class": "autoit",
        "desc": "AutoIt",
        "code": "autoit",
        "descWiki": "AutoIt（读音aw-tow-it）是一个用于Microsoft Windows的免费自动化语言。在它的早期发布版本中，这个软件主要旨在为微软Windows程序创建自动化脚本（有时也称为宏）但现在已经成长为包含了编程语言设计和全面功能的增强的软件。"
    },
    {
        "lang": "Elixir",
        "class": "elixir",
        "desc": "Elixir",
        "code": "ex",
        "descWiki": "Elixir是一个基于Erlang虚拟机的函数式、面向并行的通用编程语言。Elixir以Erlang为基础，支持分布式、高容错、实时应用程序的开发，亦可通过宏实现元编程对其进行扩展，并通过协议支持多态。"
    },
    {
        "lang": "Fortran",
        "class": "fortran",
        "desc": "Fortran",
        "code": "fortran",
        "descWiki": "Fortran，音译为福传，源自于“公式翻译”（英语：Formula Translation）的缩写，是一种编程语言。1957年由IBM开发出，是世界上第一个被正式采用并流传至今的高级编程语言。"
    },
    {
        "lang": "Haskell",
        "class": "haskell",
        "desc": "Haskell",
        "code": "hs",
        "descWiki": "Haskell（发音为/ˈhæskəl/）是一种标准化的，通用的纯函数式编程语言，有惰性求值和强静态类型。它的命名源自美国逻辑学家哈斯凯尔·加里，他在数理逻辑方面上的工作使得函数式编程语言有了广泛的基础。在Haskell中，“函数是头等对象”。作为一门函数编程语言，主要控制结构是函数。Haskell语言是1990年在编程语言Miranda的基础上标准化的，并且以λ演算为基础发展而来。这也是为什么Haskell语言以希腊字母“λ”（Lambda）作为自己的标志。Haskell具有“证明即程序、命题为类型”的特征。"
    },
    {
        "lang": "Haxe",
        "class": "haxe",
        "desc": "Haxe",
        "code": "hx",
        "descWiki": "Haxe (读音为英语的 hex，音标形式为 /heks/) 是一种多用途的开源高级编程语言，在其官方网站上称其为 \"universal language\"。它可以生成："
    }
]